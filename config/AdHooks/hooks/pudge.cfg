# Configuration file

CraftingRecipe {

    main {
        # Amount of output units. [range: 0 ~ 64, default: 1]
        I:amount=1

        # Recipe components list.
        # Components should be represented by its ids.
        # Id is a basic unit (block or item) identifier in <modId:unitName:meta> format.
        # ModId can be omitted for vanilla items. Meta can be omitted too.
        # In addition you may use '*' char as meta value to specify all possible values.
        # Or you may use just NAME in ore dictionary format (examples: oreGold, gemDiamond, blockGrass) [default: [AdOver:ingotSteel], [stick]]
        S:components <
            AdOver:ingotSteel
            stick
         >

        # Output unit id.
        # Id is a basic unit (block or item) identifier in <modId:unitName:meta> format.
        # ModId can be omitted for vanilla items. Meta can be omitted too.
        # In addition you may use '*' char as meta value to specify all possible values.
        # Or you may use just NAME in ore dictionary format (examples: oreGold, gemDiamond, blockGrass) [default: AdHooks:hookPudge:0]
        S:output=AdHooks:hookPudge:0

        # Shaped recipe pattern in format <nnnn> or <nnnnnnnnn>.
        # Where 'n' - number of recipe component (from 1 to 9).
        # Zero value (0) is for empty slot.
        # If pattern is empty, then recipe will be treated as shapeless. [default: 011101200]
        S:pattern=011101200
    }

    reserve {
        # Amount of output units. [range: 0 ~ 64, default: 1]
        I:amount=1

        # Recipe components list.
        # Components should be represented by its ids.
        # Id is a basic unit (block or item) identifier in <modId:unitName:meta> format.
        # ModId can be omitted for vanilla items. Meta can be omitted too.
        # In addition you may use '*' char as meta value to specify all possible values.
        # Or you may use just NAME in ore dictionary format (examples: oreGold, gemDiamond, blockGrass) [default: [iron_ingot], [stick]]
        S:components <
            iron_ingot
            stick
         >

        # Output unit id.
        # Id is a basic unit (block or item) identifier in <modId:unitName:meta> format.
        # ModId can be omitted for vanilla items. Meta can be omitted too.
        # In addition you may use '*' char as meta value to specify all possible values.
        # Or you may use just NAME in ore dictionary format (examples: oreGold, gemDiamond, blockGrass) [default: AdHooks:hookPudge:0]
        S:output=AdHooks:hookPudge:0

        # Shaped recipe pattern in format <nnnn> or <nnnnnnnnn>.
        # Where 'n' - number of recipe component (from 1 to 9).
        # Zero value (0) is for empty slot.
        # If pattern is empty, then recipe will be treated as shapeless. [default: 011101200]
        S:pattern=011101200
    }

}


hookPudge {
    # Defines how much damage it will deal to entity on hit. [range: 0.0 ~ 100.0, default: 0.0]
    S:damage=0.0

    # Set to 'false' if you don't need this unit. [default: true]
    B:enabled=true

    # Defines how heavy duty it can withstand. [range: 0.0 ~ 10.0, default: 4.0]
    S:strength=4.0
}


